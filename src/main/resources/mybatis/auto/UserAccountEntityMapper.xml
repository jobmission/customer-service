<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.revengemission.customerservice.persistence.mapper.UserAccountEntityMapper">
  <resultMap id="BaseResultMap" type="com.revengemission.customerservice.persistence.entity.UserAccountEntity">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="avatar_url" jdbcType="VARCHAR" property="avatarUrl" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="role" jdbcType="VARCHAR" property="role" />
    <result column="date_created" jdbcType="TIMESTAMP" property="dateCreated" />
    <result column="last_modified" jdbcType="TIMESTAMP" property="lastModified" />
    <result column="record_status" jdbcType="INTEGER" property="recordStatus" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="sort_priority" jdbcType="INTEGER" property="sortPriority" />
    <result column="version" jdbcType="INTEGER" property="version" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, username, password, avatar_url, email, mobile, nick_name, role, date_created, 
    last_modified, record_status, remarks, sort_priority, version
  </sql>
  <select id="selectByExample" parameterType="com.revengemission.customerservice.persistence.entity.UserAccountEntityExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_account_entity
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_account_entity
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user_account_entity
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.revengemission.customerservice.persistence.entity.UserAccountEntityExample">
    delete from user_account_entity
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.revengemission.customerservice.persistence.entity.UserAccountEntity">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_account_entity (username, password, avatar_url, 
      email, mobile, nick_name, 
      role, date_created, last_modified, 
      record_status, remarks, sort_priority, 
      version)
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{avatarUrl,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, 
      #{role,jdbcType=VARCHAR}, #{dateCreated,jdbcType=TIMESTAMP}, #{lastModified,jdbcType=TIMESTAMP}, 
      #{recordStatus,jdbcType=INTEGER}, #{remarks,jdbcType=VARCHAR}, #{sortPriority,jdbcType=INTEGER}, 
      #{version,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.revengemission.customerservice.persistence.entity.UserAccountEntity">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_account_entity
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="avatarUrl != null">
        avatar_url,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="role != null">
        role,
      </if>
      <if test="dateCreated != null">
        date_created,
      </if>
      <if test="lastModified != null">
        last_modified,
      </if>
      record_status,
      <if test="remarks != null">
        remarks,
      </if>
      sort_priority,
      version,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null">
        #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        #{role,jdbcType=VARCHAR},
      </if>
      <if test="dateCreated != null">
        #{dateCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModified != null">
        #{lastModified,jdbcType=TIMESTAMP},
      </if>
      #{recordStatus,jdbcType=INTEGER},
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      #{sortPriority,jdbcType=INTEGER},
      #{version,jdbcType=INTEGER},
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.revengemission.customerservice.persistence.entity.UserAccountEntityExample" resultType="java.lang.Long">
    select count(*) from user_account_entity
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_account_entity
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.avatarUrl != null">
        avatar_url = #{record.avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.nickName != null">
        nick_name = #{record.nickName,jdbcType=VARCHAR},
      </if>
      <if test="record.role != null">
        role = #{record.role,jdbcType=VARCHAR},
      </if>
      <if test="record.dateCreated != null">
        date_created = #{record.dateCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastModified != null">
        last_modified = #{record.lastModified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.recordStatus != null">
        record_status = #{record.recordStatus,jdbcType=INTEGER},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.sortPriority != null">
        sort_priority = #{record.sortPriority,jdbcType=INTEGER},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_account_entity
    set id = #{record.id,jdbcType=BIGINT},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      avatar_url = #{record.avatarUrl,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      role = #{record.role,jdbcType=VARCHAR},
      date_created = #{record.dateCreated,jdbcType=TIMESTAMP},
      last_modified = #{record.lastModified,jdbcType=TIMESTAMP},
      record_status = #{record.recordStatus,jdbcType=INTEGER},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      sort_priority = #{record.sortPriority,jdbcType=INTEGER},
      version = #{record.version,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.revengemission.customerservice.persistence.entity.UserAccountEntity">
    update user_account_entity
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null">
        avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        role = #{role,jdbcType=VARCHAR},
      </if>
      <if test="dateCreated != null">
        date_created = #{dateCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModified != null">
        last_modified = #{lastModified,jdbcType=TIMESTAMP},
      </if>
      <if test="recordStatus != null">
        record_status = #{recordStatus,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="sortPriority != null">
        sort_priority = #{sortPriority,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.revengemission.customerservice.persistence.entity.UserAccountEntity">
    update user_account_entity
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      role = #{role,jdbcType=VARCHAR},
      date_created = #{dateCreated,jdbcType=TIMESTAMP},
      last_modified = #{lastModified,jdbcType=TIMESTAMP},
      record_status = #{recordStatus,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR},
      sort_priority = #{sortPriority,jdbcType=INTEGER},
      version = #{version,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <cache flushInterval="20000" />
</mapper>